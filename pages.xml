<?xml version="1.0" encoding="UTF-8" ?>
<site>

	{{ model.make_macro('#view',       'GET', '/re/_design/$1/_view/$2?$3') }}
	{{ model.make_macro('#view-eq',    'GET', '/re/_design/$1/_view/$2?keys=["$3"]&include_docs=true') }}
	{{ model.make_macro('#view-eq-im', 'GET', '/re/_design/$1/_view/$2?keys=["$3"]&include_docs=true', immutable=True) }}
	{{ model.make_macro('#view-range', 'GET', '/re/_design/$1/_view/$2?startkey=["$3",{}]&endkey=["$3"]&descending=true&include_docs=true') }}
	{{ model.make_macro('#git-env',    'GET', '/rexpress/environments/raw/master/$1', baseurl='https://github.com/', immutable=True, headers={}) }}
	{{ model.make_macro('#view-range10', 'GET', '/re/_design/$1/_view/$2?startkey=["$3",{}]&endkey=["$3"]&descending=true&include_docs=true&limit=10') }}


	{% set envinfo = EnvInfo(model) %}
	{% set tags = model.macro('#view', 'tag', 'tags', 'group_level=1') %}


	<!-- render home -->
	{% set new_env_shares = model.macro('#view', 'env', 'envs', 'group_level=1').rows | sort(attribute='value.max', reverse=True) %}
	<page>
		<url>/</url>
		<context>
			{
				'news': [
					{% for data in new_env_shares %}
						{% set env_name = data.key[0] %}
						{
							'env': {{ envinfo.getdict(env_name) }},
							'data': {{ ext.process_shares(
								model.macro('#view-range10', 'env', 'shares', env_name).rows,
								envinfo = envinfo,
							) }}
						},
					{% endfor %}
				],
				'tags': [
					{% for tag in tags.rows | sort(attribute='value.count', reverse=True)  %}
						{% if loop.index <= 10 %}
							'{{ tag.key }}',
						{% endif %}
					{% endfor %}
				]
			}
		</context>
		<template>home.html</template>
	</page>



	<!-- render env page-->
	<page>
		<url>/env/</url>
		<context>{{ {'envs': envinfo.groups} }}</context>
		<template>env_summary.html</template>
	</page>


	<!-- render env_group(level=1) -->
	{% for group in envinfo.groups.values() %}
		<page>
			<url>/env/{{ group.name }}/</url>
			<context>{{ {
				'env'    : group,
				'shares' : ext.process_shares(
					model.macro('#view-range', 'env', 'shares', group.name).rows,
					envinfo = envinfo,
				)
			} }}
			</context>
			<template>list_env_group.html</template>
		</page>

		<!-- env_child(level=2) -->
		{% for child in group.children.values() %}
			<page>
				<url>/env/{{ group.name }}/{{ child.name }}/</url>
				<context>{{ {
					'env'    : child,
					'shares' : ext.process_shares(
						model.macro('#view-range', 'env', 'shares', group.name + '","' + child.name).rows,
						envinfo = envinfo,
					)
				} }}</context>
				<template>list_env_child.html</template>
			</page>
		{% endfor %}
	{% endfor %}



	<!-- render tags -->
	{% for tag in tags.rows %}
	<page>
		<url>/tag/{{ tag.key }}/</url>
		<context>
			{{ {
				'tag'   : tag.key,
				'shares': ext.process_shares(
					model.macro('#view-range', 'tag', 'shares', tag.key).rows,
					envinfo = envinfo,
				)
			} }}
		</context>
		<template>list_tag.html</template>
	</page>
	{% endfor %}


	<!-- get all share docs -->
	{% set all_shares = model.post('/re/_find', {
		'selector': {
			'_id': { '$gt': 0 },
			'type': { '$eq': 'share' }
		},
		'fields': ['_id', '_rev'],
		'sort': [{ '_id': 'desc' }]
	}) %}

	<!-- render shares -->
	{% for doc in all_shares.docs %}
		{% set d = model.macro('#view-eq-im', 'share', 'share', doc._id).rows %}
		{% set share_doc = ext.process_shares(d, envinfo)[0] %}
		<page>
			<url>/share/{{ share_doc._id }}/</url>
			<context>{{ {'doc': share_doc} }}</context>
			<template>share_view.html</template>
		</page>
	{% endfor %}




	<!-- render static pages -->
	<page>
		<url>/sitemap.xml</url>
		<context>{{ {'shares':all_shares, 'envs':envinfo.groups} }}</context>
		<template>_sitemap.xml</template>
	</page>

	<page>
		<url>/google424b7f5eab9d82c4.html</url>
		<content>google-site-verification: google424b7f5eab9d82c4.html</content>
	</page>

	<page>
		<url>/CNAME</url>
		<content>regular.express</content>
	</page>

	<page>
		<url>/environments.json</url>
		<content>{{ envinfo.json() }}</content>
	</page>

	<page>
		<url>/search/</url>
		<template>search.html</template>
	</page>

	<page>
		<url>/terms/</url>
		<template>terms.html</template>
	</page>

	<page>
		<url>/doc/</url>
		<template>_under_cons.html</template>
	</page>

</site>
